/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 03:45:08 GMT 2018
 */

package br.com.ufcg.util.validadores;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.ufcg.domain.Cliente;
import br.com.ufcg.util.validadores.UsuarioValidador;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsuarioValidador_ESTest extends UsuarioValidador_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("Qd_I", "#v(kxaf#V.Ro%4 DH%S\"", "#v(kxaf#V.Ro%4 DH%S\"", "br.com.ufcg.dao.UsuarioDAO", "#v(kxaf#V.Ro%4 DH%S\"");
      try { 
        UsuarioValidador.validaUsuario(cliente0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O login deve ter no maximo 15 digitos
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        UsuarioValidador.validaSenha("&thwdd*");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A senha deve ter no minimo 8 digitos
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = UsuarioValidador.validaLogin("b?+!}-n1hz>&Q;2");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("{MPr~BmKOj(GF4XzLf7", "$B5^", "$B5^", "$B5^", "{MPr~BmKOj(GF4XzLf7");
      try { 
        UsuarioValidador.validaUsuario(cliente0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Formato de email inv\u00E1lido! Tente outro!
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = UsuarioValidador.validaNome("O ornecedor tem que ter ao meno uma especialidade.");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = UsuarioValidador.validaNome("Z[ ws!G3");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      try { 
        UsuarioValidador.validaUsuario(cliente0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      try { 
        UsuarioValidador.validaSenha((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      try { 
        UsuarioValidador.validaNome((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      try { 
        UsuarioValidador.validaLogin((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      try { 
        UsuarioValidador.validaSenha("org.springfrrmework.data.domain.3xampleMatcher$NoOpPropertyValueTransformer");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A senha deve ter no maximo 20 digitos
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = UsuarioValidador.validaSenha("0.-]@0-].AA");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      try { 
        UsuarioValidador.validaEmail("A senha deve ter no maximo 20 digitos");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Formato de email inv\u00E1lido! Tente outro!
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        UsuarioValidador.validaEmail("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Formato de email inv\u00E1lido! Tente outro!
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        UsuarioValidador.validaEmail((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Formato de email inv\u00E1lido! Tente outro!
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      try { 
        UsuarioValidador.validaLogin("org.springframework.data.domain.ExapleMatcher$NoOpPropertyValueTransformer");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O login deve ter no maximo 15 digitos
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = UsuarioValidador.validaLogin(" ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      try { 
        UsuarioValidador.validaLogin("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O login deve ter no minimo 4 digitos e nao pode conter espaco
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      try { 
        UsuarioValidador.validaNome("O login deve ter no minimo 4 digitos e nao pode conter espaco");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O nome completo deve ter no maximo 50 digitos
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      try { 
        UsuarioValidador.validaNome("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O nome completo deve ter no minimo 8 digitos
         //
         verifyException("br.com.ufcg.util.validadores.UsuarioValidador", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UsuarioValidador usuarioValidador0 = new UsuarioValidador();
  }
}
