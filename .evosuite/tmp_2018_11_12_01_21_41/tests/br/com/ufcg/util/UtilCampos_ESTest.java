/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 04:01:20 GMT 2018
 */

package br.com.ufcg.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.ufcg.util.UtilCampos;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UtilCampos_ESTest extends UtilCampos_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        UtilCampos.validaTamanhoCampo("}", 1, 0, "}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A quantidade m\u00E1xima de caracteres pro campo '}' \u00E9 de 0 caracteres.
         //
         verifyException("br.com.ufcg.util.UtilCampos", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UtilCampos.validaTamanhoCampo("", (-896), 180, "");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      try { 
        UtilCampos.validaTamanhoCampo((String) null, (-1), (-1), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.ufcg.util.UtilCampos", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      try { 
        UtilCampos.validaTamanhoCampo("=2]=IuGz}", 0, 0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A quantidade m\u00E1xima de caracteres pro campo '' \u00E9 de 0 caracteres.
         //
         verifyException("br.com.ufcg.util.UtilCampos", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      try { 
        UtilCampos.validaTamanhoCampo("A quantidade m\u00EDnima de caracteres pro campo ", 1440, 0, "3jm6:L");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A quantidade m\u00EDnima de caracteres pro campo '3jm6:L' \u00E9 de 1440 caracteres.
         //
         verifyException("br.com.ufcg.util.UtilCampos", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UtilCampos.validaTamanhoCampo("", 0, 0, "");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UtilCampos utilCampos0 = new UtilCampos();
  }
}
